# 应用名称
spring.application.name=springboot-Spring-Data-Jpa
# 应用服务 WEB 访问端口
server.port=8089
server.servlet.context-path=/jpa
# 数据库连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 数据库驱动：
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.druid.name=defaultDataSource
# 数据库连接地址
spring.datasource.druid.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
spring.datasource.druid.max-wait=60000

# 开启模板缓存（默认值： true ）
spring.thymeleaf.cache=false
# 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值 :true ）
spring.thymeleaf.check-template-location=true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
spring.thymeleaf.mode=HTML5
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html
#配置单个文件的最大大小
spring.servlet.multipart.max-file-size=20MB
#设置文件的总大小
spring.servlet.multipart.max-request-size=100MB

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# 文件上传路径
uploadPath=D:/upload/

